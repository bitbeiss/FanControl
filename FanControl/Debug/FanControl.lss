
FanControl.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000076e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000007c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  000007c2  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000007f4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000130  00000000  00000000  00000830  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000025de  00000000  00000000  00000960  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000e51  00000000  00000000  00002f3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000901  00000000  00000000  00003d8f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000026c  00000000  00000000  00004690  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000905  00000000  00000000  000048fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000008c0  00000000  00000000  00005201  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f8  00000000  00000000  00005ac1  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 40 03 	call	0x680	; 0x680 <main>
  64:	0c 94 b5 03 	jmp	0x76a	; 0x76a <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <_Z5issethh>:
	if (pos>7) return 0;
	else {
		if ((byte) && (1 << pos)) return 0;
		else return 0;
	}
}
  6c:	80 e0       	ldi	r24, 0x00	; 0
  6e:	08 95       	ret

00000070 <_ZN3LcdC1Ev>:
void Lcd::lprintf(char* text) {
	//Einzelne Zeichen aus Text holen und senden.
	uint8_t pos;
	for(pos=0; pos<255; pos++) {
		if(text[pos]==0) return;
		else this->send(DATEN, text[pos]);
  70:	0f 93       	push	r16
  72:	1f 93       	push	r17
  74:	cf 93       	push	r28
  76:	df 93       	push	r29
  78:	00 d0       	rcall	.+0      	; 0x7a <_ZN3LcdC1Ev+0xa>
  7a:	00 d0       	rcall	.+0      	; 0x7c <_ZN3LcdC1Ev+0xc>
  7c:	00 d0       	rcall	.+0      	; 0x7e <_ZN3LcdC1Ev+0xe>
  7e:	cd b7       	in	r28, 0x3d	; 61
  80:	de b7       	in	r29, 0x3e	; 62
  82:	8c 01       	movw	r16, r24
  84:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN4PortC1Ev>
  88:	26 e3       	ldi	r18, 0x36	; 54
  8a:	30 e0       	ldi	r19, 0x00	; 0
  8c:	47 e3       	ldi	r20, 0x37	; 55
  8e:	50 e0       	ldi	r21, 0x00	; 0
  90:	68 e3       	ldi	r22, 0x38	; 56
  92:	70 e0       	ldi	r23, 0x00	; 0
  94:	ce 01       	movw	r24, r28
  96:	01 96       	adiw	r24, 0x01	; 1
  98:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN4PortC1EPVhS1_S1_>
  9c:	86 e0       	ldi	r24, 0x06	; 6
  9e:	fe 01       	movw	r30, r28
  a0:	31 96       	adiw	r30, 0x01	; 1
  a2:	d8 01       	movw	r26, r16
  a4:	01 90       	ld	r0, Z+
  a6:	0d 92       	st	X+, r0
  a8:	8a 95       	dec	r24
  aa:	e1 f7       	brne	.-8      	; 0xa4 <_ZN3LcdC1Ev+0x34>
  ac:	c8 01       	movw	r24, r16
  ae:	0e 94 b1 03 	call	0x762	; 0x762 <_ZN4Port31getDataDirectionRegisterAddressEv>
  b2:	fc 01       	movw	r30, r24
  b4:	20 81       	ld	r18, Z
  b6:	2f ef       	ldi	r18, 0xFF	; 255
  b8:	20 83       	st	Z, r18
  ba:	26 96       	adiw	r28, 0x06	; 6
  bc:	0f b6       	in	r0, 0x3f	; 63
  be:	f8 94       	cli
  c0:	de bf       	out	0x3e, r29	; 62
  c2:	0f be       	out	0x3f, r0	; 63
  c4:	cd bf       	out	0x3d, r28	; 61
  c6:	df 91       	pop	r29
  c8:	cf 91       	pop	r28
  ca:	1f 91       	pop	r17
  cc:	0f 91       	pop	r16
  ce:	08 95       	ret

000000d0 <_ZN3Lcd4sendEhh>:
  d0:	cf 93       	push	r28
  d2:	df 93       	push	r29
  d4:	cd b7       	in	r28, 0x3d	; 61
  d6:	de b7       	in	r29, 0x3e	; 62
  d8:	28 97       	sbiw	r28, 0x08	; 8
  da:	0f b6       	in	r0, 0x3f	; 63
  dc:	f8 94       	cli
  de:	de bf       	out	0x3e, r29	; 62
  e0:	0f be       	out	0x3f, r0	; 63
  e2:	cd bf       	out	0x3d, r28	; 61
  e4:	08 2f       	mov	r16, r24
  e6:	19 2f       	mov	r17, r25
  e8:	f4 2e       	mov	r15, r20
  ea:	61 11       	cpse	r22, r1
  ec:	05 c0       	rjmp	.+10     	; 0xf8 <_ZN3Lcd4sendEhh+0x28>
  ee:	62 e0       	ldi	r22, 0x02	; 2
  f0:	70 e0       	ldi	r23, 0x00	; 0
  f2:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
  f6:	04 c0       	rjmp	.+8      	; 0x100 <_ZN3Lcd4sendEhh+0x30>
  f8:	67 e0       	ldi	r22, 0x07	; 7
  fa:	70 e0       	ldi	r23, 0x00	; 0
  fc:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
 100:	87 e0       	ldi	r24, 0x07	; 7
 102:	89 83       	std	Y+1, r24	; 0x01
 104:	86 e0       	ldi	r24, 0x06	; 6
 106:	8a 83       	std	Y+2, r24	; 0x02
 108:	85 e0       	ldi	r24, 0x05	; 5
 10a:	8b 83       	std	Y+3, r24	; 0x03
 10c:	84 e0       	ldi	r24, 0x04	; 4
 10e:	8c 83       	std	Y+4, r24	; 0x04
 110:	6e 01       	movw	r12, r28
 112:	89 e0       	ldi	r24, 0x09	; 9
 114:	c8 0e       	add	r12, r24
 116:	d1 1c       	adc	r13, r1
 118:	fe 01       	movw	r30, r28
 11a:	31 96       	adiw	r30, 0x01	; 1
 11c:	5f 01       	movw	r10, r30
 11e:	f6 01       	movw	r30, r12
 120:	e2 90       	ld	r14, -Z
 122:	6f 01       	movw	r12, r30
 124:	6e 2d       	mov	r22, r14
 126:	8f 2d       	mov	r24, r15
 128:	0e 94 36 00 	call	0x6c	; 0x6c <_Z5issethh>
 12c:	88 23       	and	r24, r24
 12e:	39 f0       	breq	.+14     	; 0x13e <_ZN3Lcd4sendEhh+0x6e>
 130:	6e 2d       	mov	r22, r14
 132:	70 e0       	ldi	r23, 0x00	; 0
 134:	80 2f       	mov	r24, r16
 136:	91 2f       	mov	r25, r17
 138:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
 13c:	06 c0       	rjmp	.+12     	; 0x14a <_ZN3Lcd4sendEhh+0x7a>
 13e:	6e 2d       	mov	r22, r14
 140:	70 e0       	ldi	r23, 0x00	; 0
 142:	80 2f       	mov	r24, r16
 144:	91 2f       	mov	r25, r17
 146:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
 14a:	ca 14       	cp	r12, r10
 14c:	db 04       	cpc	r13, r11
 14e:	39 f7       	brne	.-50     	; 0x11e <_ZN3Lcd4sendEhh+0x4e>
 150:	d0 2e       	mov	r13, r16
 152:	e1 2e       	mov	r14, r17
 154:	63 e0       	ldi	r22, 0x03	; 3
 156:	70 e0       	ldi	r23, 0x00	; 0
 158:	80 2f       	mov	r24, r16
 15a:	91 2f       	mov	r25, r17
 15c:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
 160:	f0 e1       	ldi	r31, 0x10	; 16
 162:	fa 95       	dec	r31
 164:	f1 f7       	brne	.-4      	; 0x162 <_ZN3Lcd4sendEhh+0x92>
 166:	00 c0       	rjmp	.+0      	; 0x168 <_ZN3Lcd4sendEhh+0x98>
 168:	63 e0       	ldi	r22, 0x03	; 3
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	80 2f       	mov	r24, r16
 16e:	91 2f       	mov	r25, r17
 170:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
 174:	80 e1       	ldi	r24, 0x10	; 16
 176:	8a 95       	dec	r24
 178:	f1 f7       	brne	.-4      	; 0x176 <_ZN3Lcd4sendEhh+0xa6>
 17a:	00 c0       	rjmp	.+0      	; 0x17c <_ZN3Lcd4sendEhh+0xac>
 17c:	87 e0       	ldi	r24, 0x07	; 7
 17e:	8d 83       	std	Y+5, r24	; 0x05
 180:	86 e0       	ldi	r24, 0x06	; 6
 182:	8e 83       	std	Y+6, r24	; 0x06
 184:	85 e0       	ldi	r24, 0x05	; 5
 186:	8f 83       	std	Y+7, r24	; 0x07
 188:	84 e0       	ldi	r24, 0x04	; 4
 18a:	88 87       	std	Y+8, r24	; 0x08
 18c:	07 e0       	ldi	r16, 0x07	; 7
 18e:	e5 e0       	ldi	r30, 0x05	; 5
 190:	f0 e0       	ldi	r31, 0x00	; 0
 192:	ec 0f       	add	r30, r28
 194:	fd 1f       	adc	r31, r29
 196:	e0 0f       	add	r30, r16
 198:	f1 1d       	adc	r31, r1
 19a:	10 81       	ld	r17, Z
 19c:	61 2f       	mov	r22, r17
 19e:	8f 2d       	mov	r24, r15
 1a0:	0e 94 36 00 	call	0x6c	; 0x6c <_Z5issethh>
 1a4:	88 23       	and	r24, r24
 1a6:	39 f0       	breq	.+14     	; 0x1b6 <_ZN3Lcd4sendEhh+0xe6>
 1a8:	61 2f       	mov	r22, r17
 1aa:	70 e0       	ldi	r23, 0x00	; 0
 1ac:	8d 2d       	mov	r24, r13
 1ae:	9e 2d       	mov	r25, r14
 1b0:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
 1b4:	06 c0       	rjmp	.+12     	; 0x1c2 <_ZN3Lcd4sendEhh+0xf2>
 1b6:	61 2f       	mov	r22, r17
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	8d 2d       	mov	r24, r13
 1bc:	9e 2d       	mov	r25, r14
 1be:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
 1c2:	01 50       	subi	r16, 0x01	; 1
 1c4:	e4 cf       	rjmp	.-56     	; 0x18e <_ZN3Lcd4sendEhh+0xbe>

000001c6 <_ZN3Lcd8init4bitEv>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1c6:	25 e0       	ldi	r18, 0x05	; 5
 1c8:	2a 95       	dec	r18
 1ca:	f1 f7       	brne	.-4      	; 0x1c8 <_ZN3Lcd8init4bitEv+0x2>
	_delay_us(50);
}

void Lcd::init4bit() {
	_delay_us(15);
	this->send(BEFEHL,0x03);
 1cc:	43 e0       	ldi	r20, 0x03	; 3
 1ce:	60 e0       	ldi	r22, 0x00	; 0
 1d0:	0e 94 68 00 	call	0xd0	; 0xd0 <_ZN3Lcd4sendEhh>

000001d4 <_ZN11LedBarMeter7setPortER4Port>:
	*(this->getPort().getDataDirectionRegisterAddress()) |= 0x0F;  //leave P0-P3 as output untouched; lower 4 are indicator LEDs.
	*(this->getPort().getAddress()) &= ~(0x00);
}

void LedBarMeter::setPort(Port& pt ) {
	this->lbm_Port = pt;
 1d4:	26 e0       	ldi	r18, 0x06	; 6
 1d6:	fb 01       	movw	r30, r22
 1d8:	dc 01       	movw	r26, r24
 1da:	11 96       	adiw	r26, 0x01	; 1
 1dc:	01 90       	ld	r0, Z+
 1de:	0d 92       	st	X+, r0
 1e0:	2a 95       	dec	r18
 1e2:	e1 f7       	brne	.-8      	; 0x1dc <_ZN11LedBarMeter7setPortER4Port+0x8>
 1e4:	08 95       	ret

000001e6 <_ZN11LedBarMeter7getPortEv>:
}

Port LedBarMeter::getPort() {
 1e6:	cf 93       	push	r28
 1e8:	df 93       	push	r29
 1ea:	00 d0       	rcall	.+0      	; 0x1ec <_ZN11LedBarMeter7getPortEv+0x6>
 1ec:	00 d0       	rcall	.+0      	; 0x1ee <_ZN11LedBarMeter7getPortEv+0x8>
 1ee:	00 d0       	rcall	.+0      	; 0x1f0 <_ZN11LedBarMeter7getPortEv+0xa>
 1f0:	cd b7       	in	r28, 0x3d	; 61
 1f2:	de b7       	in	r29, 0x3e	; 62
	return this->lbm_Port;
 1f4:	26 e0       	ldi	r18, 0x06	; 6
 1f6:	fc 01       	movw	r30, r24
 1f8:	31 96       	adiw	r30, 0x01	; 1
 1fa:	de 01       	movw	r26, r28
 1fc:	11 96       	adiw	r26, 0x01	; 1
 1fe:	01 90       	ld	r0, Z+
 200:	0d 92       	st	X+, r0
 202:	2a 95       	dec	r18
 204:	e1 f7       	brne	.-8      	; 0x1fe <_ZN11LedBarMeter7getPortEv+0x18>
 206:	29 81       	ldd	r18, Y+1	; 0x01
 208:	3a 81       	ldd	r19, Y+2	; 0x02
 20a:	4b 81       	ldd	r20, Y+3	; 0x03
 20c:	5c 81       	ldd	r21, Y+4	; 0x04
 20e:	6d 81       	ldd	r22, Y+5	; 0x05
 210:	7e 81       	ldd	r23, Y+6	; 0x06
}
 212:	80 e0       	ldi	r24, 0x00	; 0
 214:	90 e0       	ldi	r25, 0x00	; 0
 216:	26 96       	adiw	r28, 0x06	; 6
 218:	0f b6       	in	r0, 0x3f	; 63
 21a:	f8 94       	cli
 21c:	de bf       	out	0x3e, r29	; 62
 21e:	0f be       	out	0x3f, r0	; 63
 220:	cd bf       	out	0x3d, r28	; 61
 222:	df 91       	pop	r29
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <_ZN11LedBarMeter4initEv>:
}

LedBarMeter::~LedBarMeter(){
}

void LedBarMeter::init() {
 228:	0f 93       	push	r16
 22a:	1f 93       	push	r17
 22c:	cf 93       	push	r28
 22e:	df 93       	push	r29
 230:	cd b7       	in	r28, 0x3d	; 61
 232:	de b7       	in	r29, 0x3e	; 62
 234:	2c 97       	sbiw	r28, 0x0c	; 12
 236:	0f b6       	in	r0, 0x3f	; 63
 238:	f8 94       	cli
 23a:	de bf       	out	0x3e, r29	; 62
 23c:	0f be       	out	0x3f, r0	; 63
 23e:	cd bf       	out	0x3d, r28	; 61
 240:	8c 01       	movw	r16, r24
	*(this->getPort().getDataDirectionRegisterAddress()) |= 0x0F;  //leave P0-P3 as output untouched; lower 4 are indicator LEDs.
 242:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 246:	2f 83       	std	Y+7, r18	; 0x07
 248:	38 87       	std	Y+8, r19	; 0x08
 24a:	49 87       	std	Y+9, r20	; 0x09
 24c:	5a 87       	std	Y+10, r21	; 0x0a
 24e:	6b 87       	std	Y+11, r22	; 0x0b
 250:	7c 87       	std	Y+12, r23	; 0x0c
 252:	ce 01       	movw	r24, r28
 254:	07 96       	adiw	r24, 0x07	; 7
 256:	0e 94 b1 03 	call	0x762	; 0x762 <_ZN4Port31getDataDirectionRegisterAddressEv>
 25a:	fc 01       	movw	r30, r24
 25c:	90 81       	ld	r25, Z
 25e:	9f 60       	ori	r25, 0x0F	; 15
 260:	90 83       	st	Z, r25
	*(this->getPort().getAddress()) &= ~(0x00);
 262:	c8 01       	movw	r24, r16
 264:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 268:	29 83       	std	Y+1, r18	; 0x01
 26a:	3a 83       	std	Y+2, r19	; 0x02
 26c:	4b 83       	std	Y+3, r20	; 0x03
 26e:	5c 83       	std	Y+4, r21	; 0x04
 270:	6d 83       	std	Y+5, r22	; 0x05
 272:	7e 83       	std	Y+6, r23	; 0x06
 274:	ce 01       	movw	r24, r28
 276:	01 96       	adiw	r24, 0x01	; 1
 278:	0e 94 ad 03 	call	0x75a	; 0x75a <_ZN4Port10getAddressEv>
 27c:	fc 01       	movw	r30, r24
 27e:	20 81       	ld	r18, Z
 280:	20 83       	st	Z, r18
}
 282:	2c 96       	adiw	r28, 0x0c	; 12
 284:	0f b6       	in	r0, 0x3f	; 63
 286:	f8 94       	cli
 288:	de bf       	out	0x3e, r29	; 62
 28a:	0f be       	out	0x3f, r0	; 63
 28c:	cd bf       	out	0x3d, r28	; 61
 28e:	df 91       	pop	r29
 290:	cf 91       	pop	r28
 292:	1f 91       	pop	r17
 294:	0f 91       	pop	r16
 296:	08 95       	ret

00000298 <_ZN11LedBarMeterC1ER4Port>:
#include "LedBarMeter.h"
#include "Port.h"

using namespace std;

LedBarMeter::LedBarMeter(Port& pt){	
 298:	0f 93       	push	r16
 29a:	1f 93       	push	r17
 29c:	cf 93       	push	r28
 29e:	df 93       	push	r29
 2a0:	ec 01       	movw	r28, r24
 2a2:	8b 01       	movw	r16, r22
 2a4:	01 96       	adiw	r24, 0x01	; 1
 2a6:	0e 94 8f 03 	call	0x71e	; 0x71e <_ZN4PortC1Ev>
	this->setPort(pt);
 2aa:	b8 01       	movw	r22, r16
 2ac:	ce 01       	movw	r24, r28
 2ae:	0e 94 ea 00 	call	0x1d4	; 0x1d4 <_ZN11LedBarMeter7setPortER4Port>
Port LedBarMeter::getPort() {
	return this->lbm_Port;
}

void LedBarMeter::setVoltage(uint8_t voltage) {
	this->Voltage = voltage;
 2b2:	18 82       	st	Y, r1
using namespace std;

LedBarMeter::LedBarMeter(Port& pt){	
	this->setPort(pt);
	this->setVoltage(0);
	this->init();			
 2b4:	ce 01       	movw	r24, r28
 2b6:	0e 94 14 01 	call	0x228	; 0x228 <_ZN11LedBarMeter4initEv>
}
 2ba:	df 91       	pop	r29
 2bc:	cf 91       	pop	r28
 2be:	1f 91       	pop	r17
 2c0:	0f 91       	pop	r16
 2c2:	08 95       	ret

000002c4 <_ZN11LedBarMeter10setVoltageEh>:
Port LedBarMeter::getPort() {
	return this->lbm_Port;
}

void LedBarMeter::setVoltage(uint8_t voltage) {
	this->Voltage = voltage;
 2c4:	fc 01       	movw	r30, r24
 2c6:	60 83       	st	Z, r22
 2c8:	08 95       	ret

000002ca <_ZN11LedBarMeter15indicateVoltageEv>:
}

void LedBarMeter::indicateVoltage() {
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	cd b7       	in	r28, 0x3d	; 61
 2d4:	de b7       	in	r29, 0x3e	; 62
 2d6:	c8 57       	subi	r28, 0x78	; 120
 2d8:	d1 09       	sbc	r29, r1
 2da:	0f b6       	in	r0, 0x3f	; 63
 2dc:	f8 94       	cli
 2de:	de bf       	out	0x3e, r29	; 62
 2e0:	0f be       	out	0x3f, r0	; 63
 2e2:	cd bf       	out	0x3d, r28	; 61
 2e4:	8c 01       	movw	r16, r24
	if (Voltage < 51){
 2e6:	fc 01       	movw	r30, r24
 2e8:	80 81       	ld	r24, Z
 2ea:	83 33       	cpi	r24, 0x33	; 51
 2ec:	08 f0       	brcs	.+2      	; 0x2f0 <_ZN11LedBarMeter15indicateVoltageEv+0x26>
 2ee:	70 c0       	rjmp	.+224    	; 0x3d0 <_ZN11LedBarMeter15indicateVoltageEv+0x106>
		this->getPort().delPin(4);
 2f0:	c8 01       	movw	r24, r16
 2f2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 2f6:	e4 96       	adiw	r28, 0x34	; 52
 2f8:	2f af       	std	Y+63, r18	; 0x3f
 2fa:	e4 97       	sbiw	r28, 0x34	; 52
 2fc:	e5 96       	adiw	r28, 0x35	; 53
 2fe:	3f af       	std	Y+63, r19	; 0x3f
 300:	e5 97       	sbiw	r28, 0x35	; 53
 302:	e6 96       	adiw	r28, 0x36	; 54
 304:	4f af       	std	Y+63, r20	; 0x3f
 306:	e6 97       	sbiw	r28, 0x36	; 54
 308:	e7 96       	adiw	r28, 0x37	; 55
 30a:	5f af       	std	Y+63, r21	; 0x3f
 30c:	e7 97       	sbiw	r28, 0x37	; 55
 30e:	e8 96       	adiw	r28, 0x38	; 56
 310:	6f af       	std	Y+63, r22	; 0x3f
 312:	e8 97       	sbiw	r28, 0x38	; 56
 314:	e9 96       	adiw	r28, 0x39	; 57
 316:	7f af       	std	Y+63, r23	; 0x3f
 318:	e9 97       	sbiw	r28, 0x39	; 57
 31a:	64 e0       	ldi	r22, 0x04	; 4
 31c:	70 e0       	ldi	r23, 0x00	; 0
 31e:	ce 01       	movw	r24, r28
 320:	8d 58       	subi	r24, 0x8D	; 141
 322:	9f 4f       	sbci	r25, 0xFF	; 255
 324:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(5);
 328:	c8 01       	movw	r24, r16
 32a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 32e:	ae 96       	adiw	r28, 0x2e	; 46
 330:	2f af       	std	Y+63, r18	; 0x3f
 332:	ae 97       	sbiw	r28, 0x2e	; 46
 334:	af 96       	adiw	r28, 0x2f	; 47
 336:	3f af       	std	Y+63, r19	; 0x3f
 338:	af 97       	sbiw	r28, 0x2f	; 47
 33a:	e0 96       	adiw	r28, 0x30	; 48
 33c:	4f af       	std	Y+63, r20	; 0x3f
 33e:	e0 97       	sbiw	r28, 0x30	; 48
 340:	e1 96       	adiw	r28, 0x31	; 49
 342:	5f af       	std	Y+63, r21	; 0x3f
 344:	e1 97       	sbiw	r28, 0x31	; 49
 346:	e2 96       	adiw	r28, 0x32	; 50
 348:	6f af       	std	Y+63, r22	; 0x3f
 34a:	e2 97       	sbiw	r28, 0x32	; 50
 34c:	e3 96       	adiw	r28, 0x33	; 51
 34e:	7f af       	std	Y+63, r23	; 0x3f
 350:	e3 97       	sbiw	r28, 0x33	; 51
 352:	65 e0       	ldi	r22, 0x05	; 5
 354:	70 e0       	ldi	r23, 0x00	; 0
 356:	ce 01       	movw	r24, r28
 358:	83 59       	subi	r24, 0x93	; 147
 35a:	9f 4f       	sbci	r25, 0xFF	; 255
 35c:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(6);
 360:	c8 01       	movw	r24, r16
 362:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 366:	a8 96       	adiw	r28, 0x28	; 40
 368:	2f af       	std	Y+63, r18	; 0x3f
 36a:	a8 97       	sbiw	r28, 0x28	; 40
 36c:	a9 96       	adiw	r28, 0x29	; 41
 36e:	3f af       	std	Y+63, r19	; 0x3f
 370:	a9 97       	sbiw	r28, 0x29	; 41
 372:	aa 96       	adiw	r28, 0x2a	; 42
 374:	4f af       	std	Y+63, r20	; 0x3f
 376:	aa 97       	sbiw	r28, 0x2a	; 42
 378:	ab 96       	adiw	r28, 0x2b	; 43
 37a:	5f af       	std	Y+63, r21	; 0x3f
 37c:	ab 97       	sbiw	r28, 0x2b	; 43
 37e:	ac 96       	adiw	r28, 0x2c	; 44
 380:	6f af       	std	Y+63, r22	; 0x3f
 382:	ac 97       	sbiw	r28, 0x2c	; 44
 384:	ad 96       	adiw	r28, 0x2d	; 45
 386:	7f af       	std	Y+63, r23	; 0x3f
 388:	ad 97       	sbiw	r28, 0x2d	; 45
 38a:	66 e0       	ldi	r22, 0x06	; 6
 38c:	70 e0       	ldi	r23, 0x00	; 0
 38e:	ce 01       	movw	r24, r28
 390:	89 59       	subi	r24, 0x99	; 153
 392:	9f 4f       	sbci	r25, 0xFF	; 255
 394:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(7);
 398:	c8 01       	movw	r24, r16
 39a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 39e:	a2 96       	adiw	r28, 0x22	; 34
 3a0:	2f af       	std	Y+63, r18	; 0x3f
 3a2:	a2 97       	sbiw	r28, 0x22	; 34
 3a4:	a3 96       	adiw	r28, 0x23	; 35
 3a6:	3f af       	std	Y+63, r19	; 0x3f
 3a8:	a3 97       	sbiw	r28, 0x23	; 35
 3aa:	a4 96       	adiw	r28, 0x24	; 36
 3ac:	4f af       	std	Y+63, r20	; 0x3f
 3ae:	a4 97       	sbiw	r28, 0x24	; 36
 3b0:	a5 96       	adiw	r28, 0x25	; 37
 3b2:	5f af       	std	Y+63, r21	; 0x3f
 3b4:	a5 97       	sbiw	r28, 0x25	; 37
 3b6:	a6 96       	adiw	r28, 0x26	; 38
 3b8:	6f af       	std	Y+63, r22	; 0x3f
 3ba:	a6 97       	sbiw	r28, 0x26	; 38
 3bc:	a7 96       	adiw	r28, 0x27	; 39
 3be:	7f af       	std	Y+63, r23	; 0x3f
 3c0:	a7 97       	sbiw	r28, 0x27	; 39
 3c2:	67 e0       	ldi	r22, 0x07	; 7
 3c4:	70 e0       	ldi	r23, 0x00	; 0
 3c6:	ce 01       	movw	r24, r28
 3c8:	8f 59       	subi	r24, 0x9F	; 159
 3ca:	9f 4f       	sbci	r25, 0xFF	; 255
 3cc:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
	}
	if (Voltage >= 51 && Voltage < 102) {	
 3d0:	f8 01       	movw	r30, r16
 3d2:	80 81       	ld	r24, Z
 3d4:	83 53       	subi	r24, 0x33	; 51
 3d6:	83 33       	cpi	r24, 0x33	; 51
 3d8:	08 f0       	brcs	.+2      	; 0x3dc <_ZN11LedBarMeter15indicateVoltageEv+0x112>
 3da:	70 c0       	rjmp	.+224    	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
		this->getPort().setPin(4);
 3dc:	c8 01       	movw	r24, r16
 3de:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 3e2:	6c 96       	adiw	r28, 0x1c	; 28
 3e4:	2f af       	std	Y+63, r18	; 0x3f
 3e6:	6c 97       	sbiw	r28, 0x1c	; 28
 3e8:	6d 96       	adiw	r28, 0x1d	; 29
 3ea:	3f af       	std	Y+63, r19	; 0x3f
 3ec:	6d 97       	sbiw	r28, 0x1d	; 29
 3ee:	6e 96       	adiw	r28, 0x1e	; 30
 3f0:	4f af       	std	Y+63, r20	; 0x3f
 3f2:	6e 97       	sbiw	r28, 0x1e	; 30
 3f4:	6f 96       	adiw	r28, 0x1f	; 31
 3f6:	5f af       	std	Y+63, r21	; 0x3f
 3f8:	6f 97       	sbiw	r28, 0x1f	; 31
 3fa:	a0 96       	adiw	r28, 0x20	; 32
 3fc:	6f af       	std	Y+63, r22	; 0x3f
 3fe:	a0 97       	sbiw	r28, 0x20	; 32
 400:	a1 96       	adiw	r28, 0x21	; 33
 402:	7f af       	std	Y+63, r23	; 0x3f
 404:	a1 97       	sbiw	r28, 0x21	; 33
 406:	64 e0       	ldi	r22, 0x04	; 4
 408:	70 e0       	ldi	r23, 0x00	; 0
 40a:	ce 01       	movw	r24, r28
 40c:	85 5a       	subi	r24, 0xA5	; 165
 40e:	9f 4f       	sbci	r25, 0xFF	; 255
 410:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().delPin(5);
 414:	c8 01       	movw	r24, r16
 416:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 41a:	66 96       	adiw	r28, 0x16	; 22
 41c:	2f af       	std	Y+63, r18	; 0x3f
 41e:	66 97       	sbiw	r28, 0x16	; 22
 420:	67 96       	adiw	r28, 0x17	; 23
 422:	3f af       	std	Y+63, r19	; 0x3f
 424:	67 97       	sbiw	r28, 0x17	; 23
 426:	68 96       	adiw	r28, 0x18	; 24
 428:	4f af       	std	Y+63, r20	; 0x3f
 42a:	68 97       	sbiw	r28, 0x18	; 24
 42c:	69 96       	adiw	r28, 0x19	; 25
 42e:	5f af       	std	Y+63, r21	; 0x3f
 430:	69 97       	sbiw	r28, 0x19	; 25
 432:	6a 96       	adiw	r28, 0x1a	; 26
 434:	6f af       	std	Y+63, r22	; 0x3f
 436:	6a 97       	sbiw	r28, 0x1a	; 26
 438:	6b 96       	adiw	r28, 0x1b	; 27
 43a:	7f af       	std	Y+63, r23	; 0x3f
 43c:	6b 97       	sbiw	r28, 0x1b	; 27
 43e:	65 e0       	ldi	r22, 0x05	; 5
 440:	70 e0       	ldi	r23, 0x00	; 0
 442:	ce 01       	movw	r24, r28
 444:	8b 5a       	subi	r24, 0xAB	; 171
 446:	9f 4f       	sbci	r25, 0xFF	; 255
 448:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(6);
 44c:	c8 01       	movw	r24, r16
 44e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 452:	60 96       	adiw	r28, 0x10	; 16
 454:	2f af       	std	Y+63, r18	; 0x3f
 456:	60 97       	sbiw	r28, 0x10	; 16
 458:	61 96       	adiw	r28, 0x11	; 17
 45a:	3f af       	std	Y+63, r19	; 0x3f
 45c:	61 97       	sbiw	r28, 0x11	; 17
 45e:	62 96       	adiw	r28, 0x12	; 18
 460:	4f af       	std	Y+63, r20	; 0x3f
 462:	62 97       	sbiw	r28, 0x12	; 18
 464:	63 96       	adiw	r28, 0x13	; 19
 466:	5f af       	std	Y+63, r21	; 0x3f
 468:	63 97       	sbiw	r28, 0x13	; 19
 46a:	64 96       	adiw	r28, 0x14	; 20
 46c:	6f af       	std	Y+63, r22	; 0x3f
 46e:	64 97       	sbiw	r28, 0x14	; 20
 470:	65 96       	adiw	r28, 0x15	; 21
 472:	7f af       	std	Y+63, r23	; 0x3f
 474:	65 97       	sbiw	r28, 0x15	; 21
 476:	66 e0       	ldi	r22, 0x06	; 6
 478:	70 e0       	ldi	r23, 0x00	; 0
 47a:	ce 01       	movw	r24, r28
 47c:	81 5b       	subi	r24, 0xB1	; 177
 47e:	9f 4f       	sbci	r25, 0xFF	; 255
 480:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(7);
 484:	c8 01       	movw	r24, r16
 486:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 48a:	2a 96       	adiw	r28, 0x0a	; 10
 48c:	2f af       	std	Y+63, r18	; 0x3f
 48e:	2a 97       	sbiw	r28, 0x0a	; 10
 490:	2b 96       	adiw	r28, 0x0b	; 11
 492:	3f af       	std	Y+63, r19	; 0x3f
 494:	2b 97       	sbiw	r28, 0x0b	; 11
 496:	2c 96       	adiw	r28, 0x0c	; 12
 498:	4f af       	std	Y+63, r20	; 0x3f
 49a:	2c 97       	sbiw	r28, 0x0c	; 12
 49c:	2d 96       	adiw	r28, 0x0d	; 13
 49e:	5f af       	std	Y+63, r21	; 0x3f
 4a0:	2d 97       	sbiw	r28, 0x0d	; 13
 4a2:	2e 96       	adiw	r28, 0x0e	; 14
 4a4:	6f af       	std	Y+63, r22	; 0x3f
 4a6:	2e 97       	sbiw	r28, 0x0e	; 14
 4a8:	2f 96       	adiw	r28, 0x0f	; 15
 4aa:	7f af       	std	Y+63, r23	; 0x3f
 4ac:	2f 97       	sbiw	r28, 0x0f	; 15
 4ae:	67 e0       	ldi	r22, 0x07	; 7
 4b0:	70 e0       	ldi	r23, 0x00	; 0
 4b2:	ce 01       	movw	r24, r28
 4b4:	87 5b       	subi	r24, 0xB7	; 183
 4b6:	9f 4f       	sbci	r25, 0xFF	; 255
 4b8:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
	}
	if (Voltage >= 102 && Voltage < 153) {
 4bc:	f8 01       	movw	r30, r16
 4be:	80 81       	ld	r24, Z
 4c0:	86 56       	subi	r24, 0x66	; 102
 4c2:	83 33       	cpi	r24, 0x33	; 51
 4c4:	08 f0       	brcs	.+2      	; 0x4c8 <__LOCK_REGION_LENGTH__+0xc8>
 4c6:	4f c0       	rjmp	.+158    	; 0x566 <__LOCK_REGION_LENGTH__+0x166>
		this->getPort().setPin(4);
 4c8:	c8 01       	movw	r24, r16
 4ca:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 4ce:	24 96       	adiw	r28, 0x04	; 4
 4d0:	2f af       	std	Y+63, r18	; 0x3f
 4d2:	24 97       	sbiw	r28, 0x04	; 4
 4d4:	25 96       	adiw	r28, 0x05	; 5
 4d6:	3f af       	std	Y+63, r19	; 0x3f
 4d8:	25 97       	sbiw	r28, 0x05	; 5
 4da:	26 96       	adiw	r28, 0x06	; 6
 4dc:	4f af       	std	Y+63, r20	; 0x3f
 4de:	26 97       	sbiw	r28, 0x06	; 6
 4e0:	27 96       	adiw	r28, 0x07	; 7
 4e2:	5f af       	std	Y+63, r21	; 0x3f
 4e4:	27 97       	sbiw	r28, 0x07	; 7
 4e6:	28 96       	adiw	r28, 0x08	; 8
 4e8:	6f af       	std	Y+63, r22	; 0x3f
 4ea:	28 97       	sbiw	r28, 0x08	; 8
 4ec:	29 96       	adiw	r28, 0x09	; 9
 4ee:	7f af       	std	Y+63, r23	; 0x3f
 4f0:	29 97       	sbiw	r28, 0x09	; 9
 4f2:	64 e0       	ldi	r22, 0x04	; 4
 4f4:	70 e0       	ldi	r23, 0x00	; 0
 4f6:	ce 01       	movw	r24, r28
 4f8:	8d 5b       	subi	r24, 0xBD	; 189
 4fa:	9f 4f       	sbci	r25, 0xFF	; 255
 4fc:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(5);
 500:	c8 01       	movw	r24, r16
 502:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 506:	2d af       	std	Y+61, r18	; 0x3d
 508:	3e af       	std	Y+62, r19	; 0x3e
 50a:	4f af       	std	Y+63, r20	; 0x3f
 50c:	21 96       	adiw	r28, 0x01	; 1
 50e:	5f af       	std	Y+63, r21	; 0x3f
 510:	21 97       	sbiw	r28, 0x01	; 1
 512:	22 96       	adiw	r28, 0x02	; 2
 514:	6f af       	std	Y+63, r22	; 0x3f
 516:	22 97       	sbiw	r28, 0x02	; 2
 518:	23 96       	adiw	r28, 0x03	; 3
 51a:	7f af       	std	Y+63, r23	; 0x3f
 51c:	23 97       	sbiw	r28, 0x03	; 3
 51e:	65 e0       	ldi	r22, 0x05	; 5
 520:	70 e0       	ldi	r23, 0x00	; 0
 522:	ce 01       	movw	r24, r28
 524:	cd 96       	adiw	r24, 0x3d	; 61
 526:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().delPin(6);
 52a:	c8 01       	movw	r24, r16
 52c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 530:	2f ab       	std	Y+55, r18	; 0x37
 532:	38 af       	std	Y+56, r19	; 0x38
 534:	49 af       	std	Y+57, r20	; 0x39
 536:	5a af       	std	Y+58, r21	; 0x3a
 538:	6b af       	std	Y+59, r22	; 0x3b
 53a:	7c af       	std	Y+60, r23	; 0x3c
 53c:	66 e0       	ldi	r22, 0x06	; 6
 53e:	70 e0       	ldi	r23, 0x00	; 0
 540:	ce 01       	movw	r24, r28
 542:	c7 96       	adiw	r24, 0x37	; 55
 544:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
		this->getPort().delPin(7);
 548:	c8 01       	movw	r24, r16
 54a:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 54e:	29 ab       	std	Y+49, r18	; 0x31
 550:	3a ab       	std	Y+50, r19	; 0x32
 552:	4b ab       	std	Y+51, r20	; 0x33
 554:	5c ab       	std	Y+52, r21	; 0x34
 556:	6d ab       	std	Y+53, r22	; 0x35
 558:	7e ab       	std	Y+54, r23	; 0x36
 55a:	67 e0       	ldi	r22, 0x07	; 7
 55c:	70 e0       	ldi	r23, 0x00	; 0
 55e:	ce 01       	movw	r24, r28
 560:	c1 96       	adiw	r24, 0x31	; 49
 562:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
	}
	if (Voltage >= 153 && Voltage < 204) {
 566:	f8 01       	movw	r30, r16
 568:	80 81       	ld	r24, Z
 56a:	89 59       	subi	r24, 0x99	; 153
 56c:	83 33       	cpi	r24, 0x33	; 51
 56e:	e0 f5       	brcc	.+120    	; 0x5e8 <__LOCK_REGION_LENGTH__+0x1e8>
		this->getPort().setPin(4);
 570:	c8 01       	movw	r24, r16
 572:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 576:	2b a7       	std	Y+43, r18	; 0x2b
 578:	3c a7       	std	Y+44, r19	; 0x2c
 57a:	4d a7       	std	Y+45, r20	; 0x2d
 57c:	5e a7       	std	Y+46, r21	; 0x2e
 57e:	6f a7       	std	Y+47, r22	; 0x2f
 580:	78 ab       	std	Y+48, r23	; 0x30
 582:	64 e0       	ldi	r22, 0x04	; 4
 584:	70 e0       	ldi	r23, 0x00	; 0
 586:	ce 01       	movw	r24, r28
 588:	8b 96       	adiw	r24, 0x2b	; 43
 58a:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(5);
 58e:	c8 01       	movw	r24, r16
 590:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 594:	2d a3       	std	Y+37, r18	; 0x25
 596:	3e a3       	std	Y+38, r19	; 0x26
 598:	4f a3       	std	Y+39, r20	; 0x27
 59a:	58 a7       	std	Y+40, r21	; 0x28
 59c:	69 a7       	std	Y+41, r22	; 0x29
 59e:	7a a7       	std	Y+42, r23	; 0x2a
 5a0:	65 e0       	ldi	r22, 0x05	; 5
 5a2:	70 e0       	ldi	r23, 0x00	; 0
 5a4:	ce 01       	movw	r24, r28
 5a6:	85 96       	adiw	r24, 0x25	; 37
 5a8:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(6);
 5ac:	c8 01       	movw	r24, r16
 5ae:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 5b2:	2f 8f       	std	Y+31, r18	; 0x1f
 5b4:	38 a3       	std	Y+32, r19	; 0x20
 5b6:	49 a3       	std	Y+33, r20	; 0x21
 5b8:	5a a3       	std	Y+34, r21	; 0x22
 5ba:	6b a3       	std	Y+35, r22	; 0x23
 5bc:	7c a3       	std	Y+36, r23	; 0x24
 5be:	66 e0       	ldi	r22, 0x06	; 6
 5c0:	70 e0       	ldi	r23, 0x00	; 0
 5c2:	ce 01       	movw	r24, r28
 5c4:	4f 96       	adiw	r24, 0x1f	; 31
 5c6:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().delPin(7);
 5ca:	c8 01       	movw	r24, r16
 5cc:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 5d0:	29 8f       	std	Y+25, r18	; 0x19
 5d2:	3a 8f       	std	Y+26, r19	; 0x1a
 5d4:	4b 8f       	std	Y+27, r20	; 0x1b
 5d6:	5c 8f       	std	Y+28, r21	; 0x1c
 5d8:	6d 8f       	std	Y+29, r22	; 0x1d
 5da:	7e 8f       	std	Y+30, r23	; 0x1e
 5dc:	67 e0       	ldi	r22, 0x07	; 7
 5de:	70 e0       	ldi	r23, 0x00	; 0
 5e0:	ce 01       	movw	r24, r28
 5e2:	49 96       	adiw	r24, 0x19	; 25
 5e4:	0e 94 9e 03 	call	0x73c	; 0x73c <_ZN4Port6delPinEi>
	}
	if (Voltage >= 204 ) {
 5e8:	f8 01       	movw	r30, r16
 5ea:	80 81       	ld	r24, Z
 5ec:	8c 3c       	cpi	r24, 0xCC	; 204
 5ee:	e0 f1       	brcs	.+120    	; 0x668 <__LOCK_REGION_LENGTH__+0x268>
		this->getPort().setPin(4);
 5f0:	c8 01       	movw	r24, r16
 5f2:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 5f6:	2b 8b       	std	Y+19, r18	; 0x13
 5f8:	3c 8b       	std	Y+20, r19	; 0x14
 5fa:	4d 8b       	std	Y+21, r20	; 0x15
 5fc:	5e 8b       	std	Y+22, r21	; 0x16
 5fe:	6f 8b       	std	Y+23, r22	; 0x17
 600:	78 8f       	std	Y+24, r23	; 0x18
 602:	64 e0       	ldi	r22, 0x04	; 4
 604:	70 e0       	ldi	r23, 0x00	; 0
 606:	ce 01       	movw	r24, r28
 608:	43 96       	adiw	r24, 0x13	; 19
 60a:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(5);
 60e:	c8 01       	movw	r24, r16
 610:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 614:	2d 87       	std	Y+13, r18	; 0x0d
 616:	3e 87       	std	Y+14, r19	; 0x0e
 618:	4f 87       	std	Y+15, r20	; 0x0f
 61a:	58 8b       	std	Y+16, r21	; 0x10
 61c:	69 8b       	std	Y+17, r22	; 0x11
 61e:	7a 8b       	std	Y+18, r23	; 0x12
 620:	65 e0       	ldi	r22, 0x05	; 5
 622:	70 e0       	ldi	r23, 0x00	; 0
 624:	ce 01       	movw	r24, r28
 626:	0d 96       	adiw	r24, 0x0d	; 13
 628:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(6);
 62c:	c8 01       	movw	r24, r16
 62e:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 632:	2f 83       	std	Y+7, r18	; 0x07
 634:	38 87       	std	Y+8, r19	; 0x08
 636:	49 87       	std	Y+9, r20	; 0x09
 638:	5a 87       	std	Y+10, r21	; 0x0a
 63a:	6b 87       	std	Y+11, r22	; 0x0b
 63c:	7c 87       	std	Y+12, r23	; 0x0c
 63e:	66 e0       	ldi	r22, 0x06	; 6
 640:	70 e0       	ldi	r23, 0x00	; 0
 642:	ce 01       	movw	r24, r28
 644:	07 96       	adiw	r24, 0x07	; 7
 646:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
		this->getPort().setPin(7);
 64a:	c8 01       	movw	r24, r16
 64c:	0e 94 f3 00 	call	0x1e6	; 0x1e6 <_ZN11LedBarMeter7getPortEv>
 650:	29 83       	std	Y+1, r18	; 0x01
 652:	3a 83       	std	Y+2, r19	; 0x02
 654:	4b 83       	std	Y+3, r20	; 0x03
 656:	5c 83       	std	Y+4, r21	; 0x04
 658:	6d 83       	std	Y+5, r22	; 0x05
 65a:	7e 83       	std	Y+6, r23	; 0x06
 65c:	67 e0       	ldi	r22, 0x07	; 7
 65e:	70 e0       	ldi	r23, 0x00	; 0
 660:	ce 01       	movw	r24, r28
 662:	01 96       	adiw	r24, 0x01	; 1
 664:	0e 94 90 03 	call	0x720	; 0x720 <_ZN4Port6setPinEi>
	}	
}
 668:	c8 58       	subi	r28, 0x88	; 136
 66a:	df 4f       	sbci	r29, 0xFF	; 255
 66c:	0f b6       	in	r0, 0x3f	; 63
 66e:	f8 94       	cli
 670:	de bf       	out	0x3e, r29	; 62
 672:	0f be       	out	0x3f, r0	; 63
 674:	cd bf       	out	0x3d, r28	; 61
 676:	df 91       	pop	r29
 678:	cf 91       	pop	r28
 67a:	1f 91       	pop	r17
 67c:	0f 91       	pop	r16
 67e:	08 95       	ret

00000680 <main>:
#include "LedBarMeter.h"
#include "Byte.h"
#include "Lcd.h"


int main(void) {
 680:	cf 93       	push	r28
 682:	df 93       	push	r29
 684:	cd b7       	in	r28, 0x3d	; 61
 686:	de b7       	in	r29, 0x3e	; 62
 688:	63 97       	sbiw	r28, 0x13	; 19
 68a:	0f b6       	in	r0, 0x3f	; 63
 68c:	f8 94       	cli
 68e:	de bf       	out	0x3e, r29	; 62
 690:	0f be       	out	0x3f, r0	; 63
 692:	cd bf       	out	0x3d, r28	; 61
	Port myPORTA(&PORTA,&DDRA,&PINA);
 694:	29 e3       	ldi	r18, 0x39	; 57
 696:	30 e0       	ldi	r19, 0x00	; 0
 698:	4a e3       	ldi	r20, 0x3A	; 58
 69a:	50 e0       	ldi	r21, 0x00	; 0
 69c:	6b e3       	ldi	r22, 0x3B	; 59
 69e:	70 e0       	ldi	r23, 0x00	; 0
 6a0:	ce 01       	movw	r24, r28
 6a2:	01 96       	adiw	r24, 0x01	; 1
 6a4:	0e 94 87 03 	call	0x70e	; 0x70e <_ZN4PortC1EPVhS1_S1_>
	LedBarMeter myLedBarMeter(myPORTA);
 6a8:	be 01       	movw	r22, r28
 6aa:	6f 5f       	subi	r22, 0xFF	; 255
 6ac:	7f 4f       	sbci	r23, 0xFF	; 255
 6ae:	ce 01       	movw	r24, r28
 6b0:	07 96       	adiw	r24, 0x07	; 7
 6b2:	0e 94 4c 01 	call	0x298	; 0x298 <_ZN11LedBarMeterC1ER4Port>
	
	unsigned char count=0;
	
	Lcd myLCD = Lcd();
 6b6:	ce 01       	movw	r24, r28
 6b8:	0e 96       	adiw	r24, 0x0e	; 14
 6ba:	0e 94 38 00 	call	0x70	; 0x70 <_ZN3LcdC1Ev>
	myLCD.init4bit();
 6be:	ce 01       	movw	r24, r28
 6c0:	0e 96       	adiw	r24, 0x0e	; 14
 6c2:	0e 94 e3 00 	call	0x1c6	; 0x1c6 <_ZN3Lcd8init4bitEv>
	
    while (1) 
    {
		//myLCD.lprintf("Hello World!");
			
		myLedBarMeter.setVoltage(count);
 6c6:	60 e0       	ldi	r22, 0x00	; 0
 6c8:	ce 01       	movw	r24, r28
 6ca:	07 96       	adiw	r24, 0x07	; 7
 6cc:	0e 94 62 01 	call	0x2c4	; 0x2c4 <_ZN11LedBarMeter10setVoltageEh>
		myLedBarMeter.indicateVoltage();
 6d0:	ce 01       	movw	r24, r28
 6d2:	07 96       	adiw	r24, 0x07	; 7
 6d4:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN11LedBarMeter15indicateVoltageEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 6d8:	87 ea       	ldi	r24, 0xA7	; 167
 6da:	91 e6       	ldi	r25, 0x61	; 97
 6dc:	01 97       	sbiw	r24, 0x01	; 1
 6de:	f1 f7       	brne	.-4      	; 0x6dc <main+0x5c>
 6e0:	00 c0       	rjmp	.+0      	; 0x6e2 <main+0x62>
 6e2:	00 00       	nop
		count++;
 6e4:	11 e0       	ldi	r17, 0x01	; 1
	
    while (1) 
    {
		//myLCD.lprintf("Hello World!");
			
		myLedBarMeter.setVoltage(count);
 6e6:	61 2f       	mov	r22, r17
 6e8:	ce 01       	movw	r24, r28
 6ea:	07 96       	adiw	r24, 0x07	; 7
 6ec:	0e 94 62 01 	call	0x2c4	; 0x2c4 <_ZN11LedBarMeter10setVoltageEh>
		myLedBarMeter.indicateVoltage();
 6f0:	ce 01       	movw	r24, r28
 6f2:	07 96       	adiw	r24, 0x07	; 7
 6f4:	0e 94 65 01 	call	0x2ca	; 0x2ca <_ZN11LedBarMeter15indicateVoltageEv>
		count++;
 6f8:	1f 5f       	subi	r17, 0xFF	; 255
 6fa:	87 ea       	ldi	r24, 0xA7	; 167
 6fc:	91 e6       	ldi	r25, 0x61	; 97
 6fe:	01 97       	sbiw	r24, 0x01	; 1
 700:	f1 f7       	brne	.-4      	; 0x6fe <main+0x7e>
 702:	00 c0       	rjmp	.+0      	; 0x704 <main+0x84>
 704:	00 00       	nop
		_delay_ms(100);
		if (count>=255) count=0;
 706:	1f 3f       	cpi	r17, 0xFF	; 255
 708:	71 f7       	brne	.-36     	; 0x6e6 <main+0x66>
 70a:	10 e0       	ldi	r17, 0x00	; 0
 70c:	ec cf       	rjmp	.-40     	; 0x6e6 <main+0x66>

0000070e <_ZN4PortC1EPVhS1_S1_>:
#include "Port.h"
#include <avr/io.h>

using namespace std;

Port::Port(volatile uint8_t* port_reg, volatile uint8_t* ddr_reg, volatile uint8_t* pin_reg) {
 70e:	fc 01       	movw	r30, r24
inline void Port::delDdrPinValue(uint8_t val) {
	*(this->getDataDirectionRegisterAddress()) &= ~(val);
}

inline void Port::setAddress(volatile uint8_t* port) {
	this->PORT = port;
 710:	71 83       	std	Z+1, r23	; 0x01
 712:	60 83       	st	Z, r22
volatile uint8_t* Port::getAddress() {
	return this->PORT;
}

inline void Port::setDataDirectionRegisterAddress(volatile uint8_t* ddr) {
	this->DDR = ddr;
 714:	53 83       	std	Z+3, r21	; 0x03
 716:	42 83       	std	Z+2, r20	; 0x02
volatile uint8_t* Port::getDataDirectionRegisterAddress() {
	return this->DDR;
}

inline void Port::setPinRegisterAddress(volatile uint8_t* pin) {
	this->PIN = pin;
 718:	35 83       	std	Z+5, r19	; 0x05
 71a:	24 83       	std	Z+4, r18	; 0x04
 71c:	08 95       	ret

0000071e <_ZN4PortC1Ev>:
	this->setAddress(port_reg);
	this->setDataDirectionRegisterAddress(ddr_reg);
	this->setPinRegisterAddress(pin_reg);
}

Port::Port() {
 71e:	08 95       	ret

00000720 <_ZN4Port6setPinEi>:
inline void Port::setAddress(volatile uint8_t* port) {
	this->PORT = port;
}

volatile uint8_t* Port::getAddress() {
	return this->PORT;
 720:	dc 01       	movw	r26, r24
 722:	ed 91       	ld	r30, X+
 724:	fc 91       	ld	r31, X

Port::Port() {
}

void Port::setPin(int pin) {
	*(this->getAddress()) |= (1 << pin);
 726:	20 81       	ld	r18, Z
 728:	81 e0       	ldi	r24, 0x01	; 1
 72a:	90 e0       	ldi	r25, 0x00	; 0
 72c:	02 c0       	rjmp	.+4      	; 0x732 <_ZN4Port6setPinEi+0x12>
 72e:	88 0f       	add	r24, r24
 730:	99 1f       	adc	r25, r25
 732:	6a 95       	dec	r22
 734:	e2 f7       	brpl	.-8      	; 0x72e <_ZN4Port6setPinEi+0xe>
 736:	82 2b       	or	r24, r18
 738:	80 83       	st	Z, r24
 73a:	08 95       	ret

0000073c <_ZN4Port6delPinEi>:
inline void Port::setAddress(volatile uint8_t* port) {
	this->PORT = port;
}

volatile uint8_t* Port::getAddress() {
	return this->PORT;
 73c:	dc 01       	movw	r26, r24
 73e:	ed 91       	ld	r30, X+
 740:	fc 91       	ld	r31, X
void Port::setPin(int pin) {
	*(this->getAddress()) |= (1 << pin);
}

void Port::delPin(int pin) {
	*(this->getAddress()) &= ~(1 << pin);
 742:	20 81       	ld	r18, Z
 744:	81 e0       	ldi	r24, 0x01	; 1
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	02 c0       	rjmp	.+4      	; 0x74e <_ZN4Port6delPinEi+0x12>
 74a:	88 0f       	add	r24, r24
 74c:	99 1f       	adc	r25, r25
 74e:	6a 95       	dec	r22
 750:	e2 f7       	brpl	.-8      	; 0x74a <_ZN4Port6delPinEi+0xe>
 752:	80 95       	com	r24
 754:	82 23       	and	r24, r18
 756:	80 83       	st	Z, r24
 758:	08 95       	ret

0000075a <_ZN4Port10getAddressEv>:
	this->PORT = port;
}

volatile uint8_t* Port::getAddress() {
	return this->PORT;
}
 75a:	fc 01       	movw	r30, r24
 75c:	80 81       	ld	r24, Z
 75e:	91 81       	ldd	r25, Z+1	; 0x01
 760:	08 95       	ret

00000762 <_ZN4Port31getDataDirectionRegisterAddressEv>:
	this->DDR = ddr;
}

volatile uint8_t* Port::getDataDirectionRegisterAddress() {
	return this->DDR;
}
 762:	fc 01       	movw	r30, r24
 764:	82 81       	ldd	r24, Z+2	; 0x02
 766:	93 81       	ldd	r25, Z+3	; 0x03
 768:	08 95       	ret

0000076a <_exit>:
 76a:	f8 94       	cli

0000076c <__stop_program>:
 76c:	ff cf       	rjmp	.-2      	; 0x76c <__stop_program>
